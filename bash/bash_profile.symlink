# Add SSH keys
ssh-add -A 2> /dev/null;

# Path stuffs
export DOTFILES=$HOME/.dotfiles
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export DISABLE_AUTO_TITLE=true
export TERM=xterm-256color
export MAVEN_OPTS="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"
export JAVA_HOME="/Volumes/JDKRAMDISK/jdk/Contents/Home"
export PATH="$JAVA_HOME/bin:$HOME/bin:/usr/local/bin:/usr/local/sbin:$DOTFILES/bin:$PATH"
export EDITOR='vim'

# LS colors
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
export LESS="-F -X -R"
alias ls='ls -GFh'

# Only record the most recent version of a command
export HISTCONTROL=ignoreboth:erasedups

# GRC colorizes nifty unix tools all over the place
if [[ $(command -v grc) && $(command -v brew) ]]
then
  source `brew --prefix`/etc/grc.bashrc
fi

# Shell prompt
function _update_ps1() {
    PS1="$(~/powerline-shell.py $? 2> /dev/null)"
}
if [ "$TERM" != "linux" ]; then
    PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
fi

# Node Version Manager
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

# Bash completion
if [ -f $(brew --prefix)/etc/bash_completion ]; then
  . $(brew --prefix)/etc/bash_completion
fi

# Load bash_aliases
if [ -f ~/.bash_aliases ]; then
  . ~/.bash_aliases
fi

# Load local bash profile
if [ -f ~/.bashrc ]; then
  source ~/.bashrc
  source ~/.profile
fi

# Load Python virtualenv and virtualenvwrapper to manage different versions/env
source /usr/local/bin/virtualenvwrapper.sh

# Link pinentry and agent together
if test -f ~/.gnupg/.gpg-agent-info -a -n "$(pgrep gpg-agent)"; then
  source ~/.gnupg/.gpg-agent-info
  export GPG_AGENT_INFO
  GPG_TTY=$(tty)
  export GPG_TTY
else
  eval $(gpg-agent --daemon --write-env-file ~/.gnupg/.gpg-agent-info > /dev/null 2>&1)
fi

# Make bash check its window size after a process completes
shopt -s checkwinsize

# FIXME: Sadly, this isn't working right now :(
# gtimeout 5 archey

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# Initialize jenv
if which jenv > /dev/null; then eval "$(jenv init -)"; fi
export PATH="$HOME/.jenv/bin:$PATH"

# Add command search
stty -ixon

archey
